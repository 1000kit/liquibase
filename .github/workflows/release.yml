name: release

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - '**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MAVEN_CLI_OPTS: "--batch-mode"
  GRAALVM_VER: 19.3.1
  GRAALVM_JAVA: java11
  GRAALVM_HOME: .graalvm
  JAVA_HOME: .graalvm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Install graalvm
      run: |
        curl https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VER/graalvm-ce-$GRAALVM_JAVA-linux-amd64-$GRAALVM_VER.tar.gz -O -J -L && tar xfz graalvm-ce-$GRAALVM_JAVA-linux-amd64-$GRAALVM_VER.tar.gz
        mv graalvm-ce-$GRAALVM_JAVA-$GRAALVM_VER $GRAALVM_HOME
        $GRAALVM_HOME/bin/gu install native-image
        rm *.tar.gz
    - name: Set build version
      run: ./mvnw $MAVEN_CLI_OPTS semver-release:version-release
    - name: Maven Build
      run: ./mvnw $MAVEN_CLI_OPTS clean package -Pnative
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/liquibase
        asset_name: liquibase
        asset_content_type: application/octet-stream
